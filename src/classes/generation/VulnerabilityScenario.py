from typing import Dict


class VulnerabilityScenario:
    """
    Represents a vulnerability scenario, such as a reentrancy attack, in a system or smart contract.
    """

    def __init__(self, name: str, scenario: str, example: str, issue: str):
        """
        Initializes a VulnerabilityScenario instance.

        :param name: The name of the vulnerability scenario.
        :type name: str
        :param scenario: A description of how the vulnerability occurs.
        :type scenario: str
        :param example: An example that demonstrates the vulnerability.
        :type example: str
        :param issue: The core issue that causes the vulnerability.
        :type issue: str
        """
        self.name = name
        self.scenario = scenario
        self.example = example
        self.issue = issue

    @staticmethod
    def from_json(data: Dict[str, str]) -> 'VulnerabilityScenario':
        """
        Creates a VulnerabilityScenario object from a dictionary.

        :param data: A dictionary containing the vulnerability scenario data.
        :type data: dict
        :return: A VulnerabilityScenario object.
        :rtype: VulnerabilityScenario
        """
        return VulnerabilityScenario(
            name=data.get('name', 'Unnamed VulnerabilityScenario'),
            scenario=data.get('scenario', ''),
            example=data.get('example', ''),
            issue=data.get('issue', '')
        )