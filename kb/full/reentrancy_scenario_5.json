{
  "name": "Reentrancy with Delegatecall",
  "scenario": "Using `delegatecall` to execute code from another contract within the context of the calling contract can introduce reentrancy.",
  "example": "contract C {\n    mapping ( address => uint256 ) private balances;\n\n    function execute(address callee, bytes memory data) public {\n        (bool success, ) = callee.delegatecall(data);\n        require(success, \"Delegatecall failed\");\n    }\n}",
  "issue": "If the callee contains malicious code that modifies the fields of the caller, it can manipulate its state. This can happen due to the nature of `delegatecall`: if the callee defines fields with the same names and types as those in the caller, their storage overlaps, allowing the callee to read and modify the caller's memory."
}
