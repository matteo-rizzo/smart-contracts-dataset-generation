{
  "name": "Reentrancy in Loops",
  "scenario": "Functions that process multiple transactions in a loop and make external calls can be reentered.",
  "example": "contract C {\n    function batchSend(address[] memory recipients, uint256 amount) public {\n        for (uint256 i = 0; i < recipients.length; i++) {\n            (bool success, ) = recipients[i].call{value: amount}(\"\");\n            require(success, \"Transfer failed\");\n        }\n    }\n}",
  "issue": "If a recipient is an attacker-controlled contract, it can reenter `batchSend` during the loop. We do not need side-effects after the call when a loop is involved."
}
